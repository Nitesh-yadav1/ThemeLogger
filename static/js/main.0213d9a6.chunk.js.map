{"version":3,"sources":["Context/themeContext.js","Components/themeToggler.js","Components/Header.js","colors.js","Components/HeroSection.js","App.js","reportWebVitals.js","index.js"],"names":["themeContext","createContext","ThemeToggler","useContext","themeMode","setThemeMode","onClick","Header","AppTheme","light","textColor","backgroundColor","border","dark","HeroSection","theme","currentTheme","style","padding","color","textAlign","fontSize","App","themeHook","useState","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAIeA,G,KAFIC,wBAAc,CAAC,QAAQ,gB,cCY3BC,EAXI,WACf,MAA+BC,qBAAWH,GAA1C,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,OACI,qBAAKC,QAAS,WACVD,EAA0B,UAAbD,EAAuB,OAAS,UADjD,SAGI,+BAAoB,UAAbA,EAAsB,WAAY,iBCGtCG,EATF,WACT,OACI,iCACI,kDCOGC,EAbA,CACXC,MAAM,CACFC,UAAW,OACXC,gBAAiB,OACjBC,OAAQ,kBAEZC,KAAK,CACDH,UAAW,OACXC,gBAAiB,OACjBC,OAAQ,oBC6BDE,EA/BG,WACd,IAAMC,EAAMZ,qBAAWH,GAAc,GAC/BgB,EAAaR,EAASO,GAE5B,OAEI,sBACAE,MAAO,CACHC,QAAS,OACTP,gBAAgB,GAAD,OAAKK,EAAaL,iBACjCQ,MAAM,GAAD,OAAKH,EAAaN,WACvBU,UAAU,UALd,UAUI,2DACA,8BAAG,iEAAH,OAEA,yBACAH,MAAO,CAACN,gBAAiB,UAC7BO,QAAS,aACTG,SAAU,OACVF,MAAO,OACPP,OAAO,GAAD,OAAKI,EAAaJ,SALpB,gBAMI,cAAC,EAAD,WCbDU,EAdL,WACV,IAAMC,EAAUC,mBAAS,SACzB,OACE,cAAC,EAAaC,SAAd,CAAwBC,MAAOH,EAA/B,SACE,gCACE,cAAC,EAAD,IACE,cAAC,EAAD,UCCOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0213d9a6.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst themeContext=createContext([\"light\",()=>{}]);\r\n                                          // not compulsory\r\nexport default themeContext;","import React,{useContext} from \"react\"\r\nimport themeContext from \"../Context/themeContext\"\r\n\r\nconst ThemeToggler=()=>{\r\n    const [themeMode,setThemeMode]=useContext(themeContext)\r\n    return(\r\n        <div onClick={()=>{\r\n            setThemeMode(themeMode=== \"light\" ? \"dark\" : \"light\")\r\n        }}>\r\n            <span>{themeMode=== \"light\" ?\"turn Off\": \"lights On\"}</span>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ThemeToggler;","import React from \"react\";\r\nimport ThemeToggler from \"./themeToggler\";\r\n\r\nconst Header=()=>{\r\n    return(\r\n        <header>\r\n            <h1>Theme Toggler</h1>\r\n            {/* <ThemeToggler/> */}\r\n        </header>\r\n\r\n    )\r\n}\r\nexport default Header;","const AppTheme={\r\n    light:{\r\n        textColor: '#000',\r\n        backgroundColor: \"#FFF\",\r\n        border: \"2px solid #000\"\r\n    },\r\n    dark:{\r\n        textColor: '#fff',\r\n        backgroundColor: \"#333\",\r\n        border: \"2px dashed #000\"\r\n    }\r\n}\r\n\r\nexport default AppTheme;","import React,{useContext} from \"react\";\r\nimport themeContext from \"../Context/themeContext\";\r\nimport AppTheme from \"../colors\";\r\nimport ThemeToggler from \"./themeToggler\";\r\n\r\n\r\n\r\nconst HeroSection=()=>{\r\n    const theme=useContext(themeContext)[0]\r\n    const currentTheme=AppTheme[theme] // access to component either light or dark in apptheme\r\n\r\n    return(\r\n        \r\n        <div\r\n        style={{\r\n            padding: \"1rem\",\r\n            backgroundColor: `${currentTheme.backgroundColor}`,\r\n            color: `${currentTheme.textColor}`,\r\n            textAlign:\"center\"\r\n        }}>\r\n\r\n           \r\n            \r\n            <h1>Context Api Theme Toggler</h1>\r\n            <p><strong>Button Controls Turn off/on</strong> </p>\r\n\r\n            <button\r\n            style={{backgroundColor: \"#26ae60\",\r\n        padding: \"10px 150px\",\r\n        fontSize: \"20px\",\r\n        color: \"#FFF\",\r\n        border: `${currentTheme.border}`}}\r\n            >   <ThemeToggler/></button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default HeroSection;","import React,{useState} from \"react\";\nimport themeContext from \"./Context/themeContext\";\nimport Header from \"./Components/Header\";\nimport HeroSection from \"./Components/HeroSection\";\n\nconst App=()=>{\nconst themeHook=useState(\"light\")\nreturn(\n  <themeContext.Provider  value={themeHook}>\n    <div>\n      <Header/>\n        <HeroSection/>\n     \n    </div>\n\n  </themeContext.Provider>\n)\n\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}